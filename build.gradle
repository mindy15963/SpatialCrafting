buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'fabric-loom' version '0.2.5-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

repositories {
    maven { url = "http://maven.fabricmc.net/" }
    maven { url = "https://kotlin.bintray.com/kotlinx" }
    maven { url = "https://mod-buildcraft.com/maven" }
    maven { url "https://minecraft.curseforge.com/api/maven" }
    maven { url "http://tehnut.info/maven" }
    maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
    jcenter()
    mavenCentral()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modCompile "alexiil.mc.lib:libblockattributes-items:${project.lba_version}"


    // Dev environment
    modCompile(group: "net.fabricmc", name: "fabric-language-kotlin", version: fabric_language_kotlin_version)
    modCompile "me.shedaniel:RoughlyEnoughItems:2.9.6+build.138"
    modCompile "mcp.mobius.waila:Hwyla:1.14.2-1.9.17-66"
    modCompile "com.jamieswhiteshirt:developer-mode:1.0.14"
    modCompile "gamemodeoverhaul:GamemodeOverhaul:1.0.1.0"
//	compileOnly(group: "net.fabricmc", name: "fabric-language-kotlin", version: fabric_language_kotlin_version)

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}


jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(jar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}
//compileKotlin {
//    kotlinOptions {
//        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
//    }
//}
